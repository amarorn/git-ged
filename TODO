Structure
- repo layout
- library
- commands

Bootstrapping
-------------
- use cli for subcommand running
- hook up global --verbose option => GitGed.debug
- move init's optparse initialization into init.rb

- use pwd and arg in init.rb to get full pathname to new git-ged repo and print in output
- make init.rb use grit to initialize (note: .../.git is what it expects for non-bare)
- add --bare option

- move layout.txt => LAYOUT down under lib/git-ged/data (leaving a symlink behind at root)
- create data/licenses subdir with licenses by short-name (see git-bup's SIGNED-OFF-BY for EULA ideas)
- populate LAYOUT under refs/heads/master during "init"
- add -l --license option to "init" that populates DEFAULT_LICENSE under refs/heads/master

- create lib/git-ged/ingest.rb that copies a GEDCOM in and assigns permaname (refs/local/gedcoms)
- copy DEFAULT_LICENSE => ged1.LICENSE or allow -l --license option to specify
- ingest one of Hannah's small GEDCOMs
- ingest one of Hannah's full GEDCOMs

- create living filter pipe for filtering GEDCOMs
- create lib/git-ged/import.rb that copies a GEDCOM from refs/{local=>heads}/gedcoms with living filter
- create person/family permaname generation strategies (_UUID or name/birth/death, parent permanames)
- create entity permaname+state link logic
- create lib/git-ged/import-person.rb that copies refs/heads/{gedcoms=>persons} (with living filter)
- create lib/git-ged/import-family.rb that copies refs/heads/{gedcoms=>families} (with living filter)
- import one of Hannah's GEDCOMs

- populate person/family => gedcom permaname+state links
- create ingest logic for dealing with the second ingest/import cycle on the same GEDCOM
  - pick default person/family permaname generation logic based on whether the _UUIDs match up
  - create local/gedcoms history based on 

- allow "init" to reinitialize an already-initialized repo and copy new DEFAULT_LICENSE/new LAYOUT

- pull living calculations and hash calculations out into json-select code (semver) under refs/heads/code
- put code version (semver + sha) into each entity on import/commit where a function was used (gedcom, person, family)

Ideas
-----
- patch gem-man to read README{,.md} in lieu of any explicit manpage (gem man rib)
- get rib-git-ged plugin working

GUI:
  shoes
EXE:
  ocra
  shoes (for GUIs)
Tools:
  differ (ruby) for string diffs, edit distance style
  datadiff (perl) annotated diff
  datadiff (python) patch production

